# Generated by Django 5.2.5 on 2025-09-13 20:00

from django.db import migrations


def create_system_accounts(apps, schema_editor):
    AccountType = apps.get_model('accounts', 'AccountType')
    Account = apps.get_model('accounts', 'Account')

    # -------- Account Types --------
    asset_type, _ = AccountType.objects.get_or_create(
        code="ASSET",
        defaults={"name": "Assets", "normal_balance": "D", "is_system": True}
    )

    liability_type, _ = AccountType.objects.get_or_create(
        code="LIAB",
        defaults={"name": "Liabilities", "normal_balance": "C", "is_system": True}
    )

    income_type, _ = AccountType.objects.get_or_create(
        code="INC",
        defaults={"name": "Income", "normal_balance": "C", "is_system": True}
    )

    expense_type, _ = AccountType.objects.get_or_create(
        code="EXP",
        defaults={"name": "Expense", "normal_balance": "D", "is_system": True}
    )

    # -------- System Accounts --------
    # Assets
    ar_account, _ = Account.objects.get_or_create(
        code="2000",
        defaults={
            "name": "Accounts Receivable",
            "account_type": asset_type,
            "is_system": True
        }
    )

    cash_account, _ = Account.objects.get_or_create(
        code="1",
        defaults={
            "name": "Cash In Hand",
            "account_type": asset_type,
            "is_system": True
        }
    )

    bank_account, _ = Account.objects.get_or_create(
        code="2",
        defaults={
            "name": "Bank",
            "account_type": asset_type,
            "is_system": True
        }
    )

    # Sub-account under Accounts Receivable
    party_accounts, _ = Account.objects.get_or_create(
        code="2100",
        defaults={
            "name": "Party Accounts",
            "account_type": asset_type,
            "parent": ar_account,
            "is_system": True
        }
    )

    Account.objects.get_or_create(
        code="2101",
        defaults={
            "name": "Party A",
            "account_type": asset_type,
            "parent": party_accounts,
            "is_system": True
        }
    )

    # Liabilities
    ap_account, _ = Account.objects.get_or_create(
        code="1001",
        defaults={
            "name": "Accounts Payable",
            "account_type": liability_type,
            "is_system": True
        }
    )

    transport_accounts, _ = Account.objects.get_or_create(
        code="1100",
        defaults={
            "name": "Transport Accounts",
            "account_type": liability_type,
            "parent": ap_account,
            "is_system": True
        }
    )

    Account.objects.get_or_create(
        code="1101",
        defaults={
            "name": "Transport X",
            "account_type": liability_type,
            "parent": transport_accounts,
            "is_system": True
        }
    )

    # ðŸšš Delivery Accounts (new)
    delivery_accounts, _ = Account.objects.get_or_create(
        code="1200",
        defaults={
            "name": "Delivery Accounts",
            "account_type": liability_type,
            "parent": ap_account,   # child of Accounts Payable
            "is_system": True
        }
    )

    # Income Accounts
    Account.objects.get_or_create(
        code="501",
        defaults={
            "name": "Commission",
            "account_type": income_type,
            "is_system": True
        }
    )

    Account.objects.get_or_create(
        code="502",
        defaults={
            "name": "Cartage",
            "account_type": income_type,
            "is_system": True
        }
    )

    Account.objects.get_or_create(
        code="503",
        defaults={
            "name": "Other Charges",
            "account_type": income_type,
            "is_system": True
        }
    )

    # Expense
    Account.objects.get_or_create(
        code="601",
        defaults={
            "name": "Labour Expenses",
            "account_type": expense_type,
            "is_system": True
        }
    )


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0003_account_is_system_accounttype_is_system_and_more'),
    ]

    operations = [
        migrations.RunPython(create_system_accounts),
    ]
